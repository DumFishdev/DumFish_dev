import chess

class Evaluate:
    piece_values = {
        chess.PAWN: 1,
        chess.KNIGHT: 3,
        chess.BISHOP: 3,
        chess.ROOK: 5,
        chess.QUEEN: 9,
        chess.KING: 0
    }

    piece_square_tables = {
        chess.PAWN: [
            0, 0, 0, 0, 0, 0, 0, 0,
            5, 5, 5, 5, 5, 5, 5, 5,
            1, 1, 2, 3, 3, 2, 1, 1,
            0.5, 0.5, 1, 2.5, 2.5, 1, 0.5, 0.5,
            0, 0, 0, 2, 2, 0, 0, 0,
            0.5, -0.5, -1, 0, 0, -1, -0.5, 0.5,
            0.5, 1, 1, -2, -2, 1, 1, 0.5,
            0, 0, 0, 0, 0, 0, 0, 0
        ],
        chess.KNIGHT: [
            -5, -4, -3, -3, -3, -3, -4, -5,
            -4, -2, 0, 0, 0, 0, -2, -4,
            -3, 0, 1, 1.5, 1.5, 1, 0, -3,
            -3, 0.5, 1.5, 2, 2, 1.5, 0.5, -3,
            -3, 0, 1.5, 2, 2, 1.5, 0, -3,
            -3, 0.5, 1, 1.5, 1.5, 1, 0.5, -3,
            -4, -2, 0, 0.5, 0.5, 0, -2, -4,
            -5, -4, -3, -3, -3, -3, -4, -5
        ],
        chess.BISHOP: [
            -2, -1, -1, -1, -1, -1, -1, -2,
            -1, 0, 0, 0, 0, 0, 0, -1,
            -1, 0, 0.5, 1, 1, 0.5, 0, -1,
            -1, 0.5, 0.5, 1, 1, 0.5, 0.5, -1,
            -1, 0, 1, 1, 1, 1, 0, -1,
            -1, 1, 1, 1, 1, 1, 1, -1,
            -1, 0.5, 0, 0, 0, 0, 0.5, -1,
            -2, -1, -1, -1, -1, -1, -1, -2
        ],
        chess.ROOK: [
            0, 0, 0, 0, 0, 0, 0, 0,
            0.5, 1, 1, 1, 1, 1, 1, 0.5,
            -0.5, 0, 0, 0, 0, 0, 0, -0.5,
            -0.5, 0, 0, 0, 0, 0, 0, -0.5,
            -0.5, 0, 0, 0, 0, 0, 0, -0.5,
            -0.5, 0, 0, 0, 0, 0, 0, -0.5,
            -0.5, 0, 0, 0, 0, 0, 0, -0.5,
            0, 0, 0, 0.5, 0.5, 0, 0, 0
        ],
        chess.QUEEN: [
            -2, -1, -1, -0.5, -0.5, -1, -1, -2,
            -1, 0, 0, 0, 0, 0, 0, -1,
            -1, 0, 0.5, 0.5, 0.5, 0.5, 0, -1,
            -0.5, 0, 0.5, 0.5, 0.5, 0.5, 0, -0.5,
            0, 0, 0.5, 0.5, 0.5, 0.5, 0, -0.5,
            -1, 0.5, 0.5, 0.5, 0.5, 0.5, 0, -1,
            -1, 0, 0.5, 0, 0, 0, 0, -1,
            -2, -1, -1, -0.5, -0.5, -1, -1, -2
        ]
    }

    @classmethod
    def evaluation_from_board(cls, board):
        score = 0
        for square in chess.SQUARES:
            piece = board.piece_at(square)
            if piece:
                value = cls.piece_values[piece.piece_type]
                pst = cls.piece_square_tables.get(piece.piece_type, [0]*64)
                if piece.color == chess.WHITE:
                    score += value + pst[square]
                else:
                    score -= value + pst[chess.square_mirror(square)]
        return score
